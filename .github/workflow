name: Build & Publish Docker

on:
  release:
    types: [published]

jobs:
  docker:
    if: ${{ !github.event.release.prerelease }}
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      security-events: write
    
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract and validate version
        id: version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          if [[ -z "$TAG" ]]; then
            echo "No tag found"
            exit 1
          fi
          echo "TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/plane-tracker:latest
            ${{ secrets.DOCKER_USERNAME }}/plane-tracker:${{ steps.version.outputs.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/plane-tracker:${{ steps.version.outputs.TAG }}
          format: 'sarif'
          output: 'trivy-results.sarif'
        continue-on-error: true

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('trivy-results.sarif') != ''
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Check for critical vulnerabilities
        run: |
          if [ -f "trivy-results.sarif" ]; then
            CRITICAL_COUNT=$(jq '[.runs[].results[] | select(.level == "error")] | length' trivy-results.sarif 2>/dev/null || echo "0")
            if [ "$CRITICAL_COUNT" -gt 0 ]; then
              echo "::warning::Critical vulnerabilities found: $CRITICAL_COUNT"
            else
              echo "No critical vulnerabilities found"
            fi
          else
            echo "::warning::Trivy scan file not found - skipping vulnerability check"
          fi

      - name: Scan for secrets in image
        uses: trufflesecurity/trufflehog@main
        with:
          base: ""
          head: ${{ github.sha }}
          extra_args: --only-verified

      - name: Docker Scout CVE scanning
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ secrets.DOCKER_USERNAME }}/plane-tracker:${{ steps.version.outputs.TAG }}
          only-severities: critical,high
          exit-code: false

      - name: Generate security report
        if: always()
        run: |
          echo "## Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "### Build Information" >> $GITHUB_STEP_SUMMARY
          echo "- Image: ${{ secrets.DOCKER_USERNAME }}/plane-tracker:${{ steps.version.outputs.TAG }}" >> $GITHUB_STEP_SUMMARY
          echo "- Scan completed at: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- Build status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.build.outcome }}" == "success" ]; then
            echo "- Build completed successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Build failed or was skipped" >> $GITHUB_STEP_SUMMARY
          fi
